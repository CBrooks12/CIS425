Chris Brooks
CIS 425
Spring 2017
Assignment 9

1:
a. [1,1..]
b. intList n = n : intList (n+1)
c. takeN n f = take n f

2: 
a. 	evens	= [2,4..]
	odds 	= [1,3..]

b.	merge xs [] = xs
	merge [] ys = ys
	merge (x:xs) (y:ys) = x:y:(merge xs ys)

b.	no. merge evens odds does not terminate because evens and odds are both infinite lists and
	the recursion does not know that they are infinite because it takes the head of the lists
	after each call and then sees which of the three functions to execute. length (merge evens odds)
	also never finishes because it is waiting for a return, but merge never returns.

c.	1. 	cubed = 0 : [x^3 | x <- [1..]]
	2. 	threes = 1 : [3^x | x <- [1..]]
	3. 	infList = [0,1..]
		squares = 0 : [x^2 | x <- [1..]]
		merge infList squares
	4. 	negatives = [-1,-2..]

